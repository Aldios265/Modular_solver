package menu.menus;

import menu.*;

public class MenuExample {


    /* Декларация анонимного класса с помощью интерфейса Function. Анонимный класс используется для возможности
    реализации функциональных опциий, содержащих множество функций различных классов, в том числе и не содержащихся в
    данном репозитории*/
    Function info = new Function() {
        public void execute() {
            System.out.println("Здесь должна быть информация о программе");
        }
    };
    Function program1 = new Function() {
        @Override
        public void execute() {
            menu.functions.TestClass.someFunction();
        }
    };

    /* Главный массив меню(сразу под данным описанием). Этот двухмерный массив включает подммассивы "окон меню" и "функциональных опций" (далее без ковычек)
     * Окна меню - это подмассивы которые содержат имя меню, имя предидущего окна меню
     * и названия опций. Данный массив автивируется классом MenuExecutor и выводится в консоль в виде списка опций.
     * Функциональные опции - подмассивы, которые при выполнении активируют определенные методы сторонных классов.
     *
     * Рассмотрим подмассивы окон меню.
     * ---
     * Структура данного подмассива  {"Имя окна меню", "Имя окна меню родителя", "Опция 1" , "Опция 2" , "Опция 3", ..., "Назад"}.
     * ---
     * Каждый такой подмассив содержит несколько полей. Первое поле - название окна меню. Оно отображается в шапке меню при
     * его выполении и именно по нему класс MenuStructure ищит нужную опцию перед перенаправлением ее классу MenuExecutor.
     * Вторая опция - название опции, высшей по иерархии, т.е класс от которого данная опция наследуется.
     * Опции следующие далее(со 2 если счет начинать с нуля) - возможные опции данного окна меню, которые должны
     * соответствовать названию какого-либо другого окна меню или функциональной опции. Важно, чтобы все
     * названия опциий строго соответствовали названиям окон меню или функциональных опций, они также чувствительны к
     * регистру.
     * Данный подмассив также может иметь "Назад" в качестве одной из опций. Имя данной опции зарезервировано под одноименную
     * функцию, которая возвращает пользователя в предидущее окно меню.  При этом совсем не обязательно, чтобы опция "Назад"
     * находилась на последней позиции, она вполне может находиться и на первой и посередине списка опций.
     * Предположим, мы хотим создать окно меню с названием "Выбрать программу", для начала мы должны решить, из
     * какого окна меню оно будет доступно, в нашем случае мы хотим чтобы оно было доступно из окна главного меню,
     * именно туда мы и записываем имя нащей опции(в нашем случае это 2 позиция если счет начинать с нуля), Затем
     * создаем новый подмассив, у которого первое поле будет представлять точно такую же строку(учитывая регистр!),
     * следующее поле - строка с названием окна - родителя, в нашем случае это "Главное меню", далее прописываем
     * возможные для данного окна меню опции и опцию "Назад".
     *
     *
     * Рассмотрим подмассивы функциональных опций.
     * ----
     * Структура данного подмассива  {"Имя функциональной опции", анонимныйКлассОпции}.
     * ----
     * Подмассивы функциональных опций содержат в себе только название опции и анонимный объект, задекларированный
     * над данным описанием, при активации которого выполняется код внутри соответствующего блока анонимного класса.
     * Т.е по сути функциональные опции, как это следует из названия добавляют функционал в данное меню.
     *
     * При создании массива меню понядок следования подмассивов не имеет значения. Однако для удобства навигации
     * рекомендуется прописывать подмассивы опций меню непосредственно под подмассивом окон меню в том
     * же порядке в котором следуют опции вышестоящего окна меню, при этом проставляя знаки табуляции для родственных
     * данному меню опций.(см. MenuExample2) */

    public Object[][] menuArray = {{"Главное меню", "Главное меню", "Выбрать программу", "Настройки", "Информация"},
            {"Выбрать программу", "Главное меню", "Программа1", "Программа2", "Назад"},
                {"Программа1", program1},
            {"Настройки", "Главное меню", "Сменить язык", "Назад"},
            {"Информация", info}
    };




}
